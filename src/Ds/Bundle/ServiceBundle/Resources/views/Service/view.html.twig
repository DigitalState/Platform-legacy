{% extends 'OroUIBundle:actions:view.html.twig' %}

{% import 'OroUIBundle::macros.html.twig' as UI %}

{% block pageHeader %}
    {% set breadcrumbs = {
        entity: entity,
        indexPath: path('ds_service_service_index'),
        indexLabel: 'ds.service.menu.index.label'|trans,
        entityTitle: entity.defaultTitle
    } %}
    {{ parent() }}
{% endblock pageHeader %}

{% block navButtons %}
    {% if resource_granted('ds.service.activation.create') %}
        <div class="btn-group pull-right">
            <a href="{{ path('ds_service_activation_create') }}" class="btn btn-primary action-button">
                {% trans %}ds.service.activation.button.create{% endtrans %}
            </a>
            {% set widgets = ds_widgets({ position: 'ds_service_activation_button_create' }) %}
            {% if widgets is not empty %}
                <a href="#" class="btn-primary btn dropdown-toggle" data-toggle="dropdown">
                    <span class="caret"></span>
                </a>
                <ul class="dropdown-menu">
                    {% for widget in widgets %}
                        <li>
                            {{ widget.content|raw }}
                        </li>
                    {% endfor %}
                </ul>
            {% endif %}
        </div>
    {% endif %}
    {% if resource_granted('ds.service.service.edit', entity) %}
        {{ UI.editButton({
            path: path('ds_service_service_edit', { id: entity.id }),
            entity_label: 'ds.service.entity_label'|trans
        }) }}
    {% endif %}
    {% if resource_granted('ds.service.service.delete', entity) %}
        {{ UI.deleteButton({
            dataUrl: path('ds_service_api_rest_delete_service', { id: entity.id }),
            dataRedirect: path('ds_service_service_index'),
            aCss: 'no-hash remove-button',
            id: 'btn-remove-service',
            dataId: entity.id,
            entity_label: 'ds.service.entity_label'|trans,
        }) }}
    {% endif %}
{% endblock navButtons %}

{% block content_data %}
    {% set dataBlocks = [] %}
    {% for widget in ds_widgets({ position: 'ds_service_service_entity', context: context }, { entity: entity, context: context }) %}
        {% set dataBlocks = dataBlocks|merge([ {
            title: widget.title|trans,
            subblocks: [ {
                data : [ widget.content ]
            } ]
        } ]) %}
    {% endfor %}
    {% set id = 'service-view' %}
    {% set data = { dataBlocks: dataBlocks } %}
    {{ parent() }}
{% endblock content_data %}
